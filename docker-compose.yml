version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: myapp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Nora123}
      MYSQL_DATABASE: mydb
      MYSQL_ROOT_HOST: '%'  # Allow root connections from any host
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./calendar-app/server/scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
      - ./calendar-app/server/scripts/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3308:3306"
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-Nora123}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./calendar-app/server
    container_name: myapp-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=3000
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD:-Nora123}
      - DB_NAME=mydb
      - JWT_SECRET=mypersonallilapp_secret_token_key
      - NODE_ENV=production
    ports:
      - "3000:3000"
    restart: always
    networks:
      - app-network
    command: >
      sh -c "node scripts/init-db.js &&
             npm start"

  # Frontend App
  frontend:
    build: 
      context: ./calendar-app
      args:
        - VITE_API_BASE_URL=/v1/internal
    container_name: myapp-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 